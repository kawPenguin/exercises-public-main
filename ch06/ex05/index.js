/**
 * 次の条件を満たすオブジェクトを作成し、for/in ループで順番を確認しなさい。

- 以下のプロパティを持つオブジェクトをプロトタイプとして持つ
  - プロパティ名が数値のプロパティ
  - プロパティ名が文字列のプロパティ
  - 列挙可能なプロパティ
- 以下のプロパティを持つ
  - プロパティ名が数値かつプロトタイプの数値プロパティと同名のプロパティ
  - プロパティ名が数値かつプロトタイプの数値プロパティと同名でないプロパティ
  - プロパティ名が文字列かつプロトタイプの文字列プロパティと同名のプロパティ
  - プロパティ名が文字列かつプロトタイプの文字列プロパティと同名でないプロパティ
  - 列挙不可かつプロトタイプの列挙可能プロパティと同名のプロパティ

 */

const proto = {
  1: 'プロトタイプの数値プロパティ',
  '文字列プロパティ': 'プロトタイプの文字列プロパティ',
  enumerableProperty: 'プロトタイプの列挙可能プロパティ'
};
const obj = Object.create(proto, {
  1: { value: 'オブジェクトの数値プロパティ（同名）', enumerable: true },
  2: { value: 'オブジェクトの数値プロパティ（異名）', enumerable: true },
  '文字列プロパティ': { value: 'オブジェクトの文字列プロパティ（同名）', enumerable: true },
  '別の文字列プロパティ': { value: 'オブジェクトの文字列プロパティ（異名）', enumerable: true },
  nonEnumerableProperty: { value: 'オブジェクトの列挙不可プロパティ（同名）', enumerable: false }
});

for (const key in obj) {
  console.log(`${key}: ${obj[key]}`);
}


/**
 * 出力結果
1: オブジェクトの数値プロパティ（同名）
2: オブジェクトの数値プロパティ（異名）
文字列プロパティ: オブジェクトの文字列プロパティ（同名）
別の文字列プロパティ: オブジェクトの文字列プロパティ（異名）
enumerableProperty: プロトタイプの列挙可能プロパティ
 */